//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use chrono::Utc;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "track")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub path: String,
    pub extension: String,
    pub title: String,
    pub artist: String,
    pub album: String,
    pub disc_number: Option<i32>,
    pub track_number: Option<i32>,
    pub year: Option<i32>,
    pub genre: String,
    pub album_artist: String,
    pub publisher: String,
    pub catalog_number: String,
    pub duration_seconds: i32,
    pub audio_bitrate: i32,
    pub overall_bitrate: i32,
    pub sample_rate: i32,
    pub bit_depth: i32,
    pub channels: i32,
    pub tags: String,
    pub created: chrono::DateTime<Utc>,
    pub modified: chrono::DateTime<Utc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
